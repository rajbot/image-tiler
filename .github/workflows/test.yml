name: Test

on:
  push:
    branches: [ main, raj_* ]
  pull_request:
    branches: [ main ]

jobs:
  rust-tests:
    name: Rust Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run Rust tests
      run: cargo test
    
    - name: Check Rust formatting
      run: cargo fmt -- --check
    
    - name: Run Clippy
      run: cargo clippy -- -D warnings

  wasm-build:
    name: WASM Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: wasm32-unknown-unknown
    
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-wasm-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build WASM package
      run: wasm-pack build --target web --out-dir pkg
    
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wasm-pkg
        path: pkg/
        retention-days: 1

  wasm-tests:
    name: WASM Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: wasm32-unknown-unknown
    
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-wasm-test-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run WASM tests
      run: wasm-pack test --headless --chrome

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: wasm-build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-pkg
        path: pkg/
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npm run test
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7
    
    - name: Upload test screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-screenshots
        path: test-results/
        retention-days: 7